import{r as d,R as c}from"./react-1d8b2501.js";const m="modulepreload",f=function(l){return"/3d-object/"+l},u={},_=function(t,n,a){if(!n||n.length===0)return t();const h=document.getElementsByTagName("link");return Promise.all(n.map(e=>{if(e=f(e),e in u)return;u[e]=!0;const s=e.endsWith(".css"),p=s?'[rel="stylesheet"]':"";if(!!a)for(let i=h.length-1;i>=0;i--){const o=h[i];if(o.href===e&&(!s||o.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${p}`))return;const r=document.createElement("link");if(r.rel=s?"stylesheet":m,s||(r.as="script",r.crossOrigin=""),r.href=e,document.head.appendChild(r),s)return new Promise((i,o)=>{r.addEventListener("load",i),r.addEventListener("error",()=>o(new Error(`Unable to preload CSS for ${e}`)))})})).then(()=>t())};class R extends d.PureComponent{constructor(t){super(t),this.$=c.createRef(),this._=c.createRef()}render(){return c.createElement("span",{ref:this.$},c.createElement("a",{...this.props,ref:this._},this.props.children))}componentDidMount(){this.paint()}getSnapshotBeforeUpdate(){return this.reset(),null}componentDidUpdate(){this.paint()}componentWillUnmount(){this.reset()}paint(){const t=this.$.current.appendChild(document.createElement("span"));_(()=>import("./github-buttons-48f94bc9.js"),[]).then(({render:n})=>{this._.current!=null&&n(t.appendChild(this._.current),function(a){try{t.parentNode.replaceChild(a,t)}catch{}})})}reset(){this.$.current.replaceChild(this._.current,this.$.current.lastChild)}}export{R as G};
